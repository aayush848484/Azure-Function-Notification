using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NotificationAzure
{
    public class RuleApiModel
    {
        public RuleApiModel() { }

        [JsonProperty("Id")]
        public string Id { get; set; }

        [JsonProperty("Name")]
        public string Name { get; set; }

        [JsonProperty("Enabled")]
        public bool Enabled { get; set; }

        [JsonProperty("Description")]
        public string Description { get; set; }

        [JsonProperty("GroupId")]
        public string GroupId { get; set; }

        [JsonProperty("Severity")]
        public string Severity { get; set; }

        // Adding Alert Notification attributes.
        [JsonProperty(PropertyName = "Actions")]
        public List<ActionItemApiModel> Actions { get; set; } = new List<ActionItemApiModel>();

        /// <summary>Method required when implementing a custom equality logic [CS0659]</summary>
        /// <remarks>Code auto-generated by IDE</remarks>
        public override int GetHashCode()
        {
            unchecked
            {
                var hashCode = (this.Id != null ? this.Id.GetHashCode() : 0);
                hashCode = (hashCode * 397) ^ (this.Name != null ? this.Name.GetHashCode() : 0);
                hashCode = (hashCode * 397) ^ (this.Description != null ? this.Description.GetHashCode() : 0);
                hashCode = (hashCode * 397) ^ this.Enabled.GetHashCode();
                hashCode = (hashCode * 397) ^ (this.GroupId != null ? this.GroupId.GetHashCode() : 0);
                hashCode = (hashCode * 397) ^ (this.Severity != null ? this.Severity.GetHashCode() : 0);
                hashCode = (hashCode * 397) ^ (this.Actions != null ? this.Actions.GetHashCode() : 0);
                return hashCode;
            }
        }

        public IList<Dictionary<string, string>> getActionsDictionary()
        {
            var actionsDictionary = new List<Dictionary<string, string>>();
            foreach (ActionItemApiModel act in this.Actions)
            {
                actionsDictionary.Add(act.getActionItemInDictionary());
            }
            return actionsDictionary;
        }
    }
}
